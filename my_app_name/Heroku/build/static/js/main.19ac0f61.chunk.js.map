{"version":3,"sources":["Pokemon.js","PokemonList.js","App.js","serviceWorker.js","index.js"],"names":["CapitalizeFirst","string","toUpperCase","slice","Pokemon","props","state","grandparent","pokemon","this","collection","includes","newCollection","splice","indexOf","setState","className","name","types","length","type","src","sprites","front_default","stats","base_stat","id","onClick","handleCollection","bind","React","Component","PokemonList","listOfPokemon","parent","map","App","pokemon_links_all","current_pokemon","pokemon_links_by_type","current_search","current_end_index","fetch","responseAll","json","jsonAll","results","fetchTwenty","responseByType","jsonByType","resultsByType","url","typeResponse","typeJson","typeObject","Object","assign","index","itemsToFetch","i","push","item","response","event","preventDefault","value","target","toLowerCase","onChange","handleSelectChange","placeholder","handleTextChange","handleCollectionSearch","handlePrevious","handleNext","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.19ac0f61.chunk.js","sourcesContent":["import React from 'react'\n\nclass Pokemon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            grandparent: props.grandparent,\n            pokemon: props.pokemon\n        }\n    }\n\n    handleCollection() {\n        if (this.state.grandparent.state.collection.includes(this.state.pokemon)) {\n            let newCollection = this.state.grandparent.state.collection\n            newCollection.splice(newCollection.indexOf(this.state.pokemon), 1)\n            this.state.grandparent.setState({collection: newCollection})\n        } else {\n            this.state.grandparent.setState({collection: [...this.state.grandparent.state.collection, this.state.pokemon]})\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"poke-card grid-container-3\">\n                <h4>{CapitalizeFirst(this.state.pokemon.name)}</h4>\n                <h5>{this.state.pokemon.types.length === 1 ? CapitalizeFirst(this.state.pokemon.types[0].type.name) : `${CapitalizeFirst(this.state.pokemon.types[0].type.name)} - ${CapitalizeFirst(this.state.pokemon.types[1].type.name)}` }</h5>\n                <div className=\"row-2-4\">\n                    <img src={this.state.pokemon.sprites.front_default} />\n                </div>\n                <div className=\"row-2-4 column-2-3 grid-container-2\">\n                    <p>{this.state.pokemon.stats[0].base_stat} - HP</p>\n                    <p>{this.state.pokemon.stats[1].base_stat} - Attack</p>\n                    <p>{this.state.pokemon.stats[2].base_stat} - Defense</p>\n                    <p>{this.state.pokemon.stats[3].base_stat} - Special Attack</p>\n                    <p>{this.state.pokemon.stats[4].base_stat} - Special Defense</p>\n                    <p>{this.state.pokemon.stats[5].base_stat} - Speed</p>\n                </div>\n                <div className=\"row-5 column-2 align-right\">\n                    <h5>Pokedex Number: {this.state.pokemon.id}</h5>\n                </div>\n                <div className=\"row-5\">\n                <br /><button onClick={this.handleCollection.bind(this)}>{this.state.grandparent.state.collection.includes(this.state.pokemon) ? \"Remove from collection\" : \"Add to collection\"}</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction CapitalizeFirst(string) {\n    return string[0].toUpperCase() + string.slice(1)\n}\n\nexport default Pokemon","import React from 'react'\n\nimport Pokemon from './Pokemon'\n\nfunction PokemonList({listOfPokemon, parent}) {\n    return (\n        <div className=\"grid-container-2\">\n            {listOfPokemon.map(pokemon => <Pokemon pokemon={pokemon} grandparent={parent} />)}\n        </div>\n    )\n}\n\nexport default PokemonList","import React from 'react';\nimport './App.css';\n\nimport PokemonList from './PokemonList'\n\nconst types = [\"normal\", \"fighting\", \"flying\", \"poison\", \"ground\", \"rock\", \"bug\", \"ghost\", \"steel\", \"fire\", \"water\", \"grass\", \"electric\", \"ice\", \"dragon\", \"dark\", \"fairy\"]\nclass App extends React.Component {\n\n  state = {\n    pokemon_links_all: [],\n    current_pokemon: [],\n    pokemon_links_by_type: {},\n    current_search: \"all\",\n    current_end_index: 0,\n    collection: []\n  }\n\n  async componentDidMount() {\n    const responseAll = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=1000\")\n    const jsonAll = await responseAll.json()\n    this.setState({pokemon_links_all: jsonAll.results})\n    \n    this.fetchTwenty(0)\n    \n    const responseByType = await fetch(\"https://pokeapi.co/api/v2/type\")\n    const jsonByType = await responseByType.json()\n    const resultsByType = jsonByType.results\n    for (const type of resultsByType) {\n      const typeResponse = await fetch(type.url)\n      const typeJson = await typeResponse.json()\n      let typeObject = {}\n      typeObject[type.name] = typeJson.pokemon\n      this.setState({pokemon_links_by_type : Object.assign(this.state.pokemon_links_by_type, typeObject)})\n    }\n  }\n\n  async fetchTwenty(index) {\n    await this.setState({current_pokemon: []})\n    let itemsToFetch = []\n    if (this.state.current_search === \"all\") {\n      itemsToFetch = this.state.pokemon_links_all.slice(index, index+20)\n    } else if (types.includes(this.state.current_search)) {\n      itemsToFetch = this.state.pokemon_links_by_type[this.state.current_search].slice(index, index+20)\n    } else if (this.state.current_search === \"collection\") {\n      itemsToFetch = this.state.collection.slice(index, index+20)\n      this.setState({current_pokemon: itemsToFetch})\n      return\n    } else {\n      for (var i = 0; i < this.state.pokemon_links_all.slice(index).length; i++) {\n        if (this.state.pokemon_links_all.slice(index)[i].name.includes(this.state.current_search)) {\n          itemsToFetch.push(this.state.pokemon_links_all.slice(index)[i])\n          if (itemsToFetch.length >= 20) {\n            index = i - 19\n            break\n          }\n        }\n      }\n    }\n    for (const item of itemsToFetch) {\n      let response = \"\"\n      if (item.url) {\n        response = await fetch(item.url)\n      } else {\n        response = await fetch(item.pokemon.url)\n      }\n      const json = await response.json()\n      this.setState({current_pokemon: [...this.state.current_pokemon, json], current_end_index: index+20})\n    }\n  }\n\n  handleNext() {\n    this.fetchTwenty(this.state.current_end_index)\n  }\n\n  handlePrevious() {\n    this.fetchTwenty(this.state.current_end_index-40)\n  }\n\n  async handleCollectionSearch() {\n    await this.setState({current_search: \"collection\"})\n    this.fetchTwenty(0)\n  }\n\n  async handleSelectChange(event) {\n    event.preventDefault()\n    let value = event.target.value\n    if (value !== \"---\") {\n      await this.setState({current_search: value.toLowerCase()})\n    } else {\n      await this.setState({current_search: \"all\"})\n    }\n    this.fetchTwenty(0)\n  }\n\n  async handleTextChange(event) {\n    if (event.target.value === \"\") {\n      await this.setState({current_search: \"all\"})\n    } else {\n      await this.setState({current_search: event.target.value.toLowerCase()})\n    }\n    this.fetchTwenty(0)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"side-bar\">\n          Search\n          <select onChange={this.handleSelectChange.bind(this)}>\n            <option>---</option>\n            {types.map(type => <option>{CapitalizeFirst(type)}</option>)}\n          </select>\n          <input type=\"text\" placeholder=\"name...\" onChange={this.handleTextChange.bind(this)}/>\n          <button onClick={this.handleCollectionSearch.bind(this)}>View Collection</button>\n        </div>\n        <div className=\"main\">\n          Pokemon   \n          <PokemonList listOfPokemon={this.state.current_pokemon} parent={this}/>\n        </div>\n        <div className=\"bottom-bar\">\n          <button onClick={this.handlePrevious.bind(this)}>Previous</button>\n          <button onClick={this.handleNext.bind(this)}>Next</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction CapitalizeFirst(string) {\n  return string[0].toUpperCase() + string.slice(1)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}